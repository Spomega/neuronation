name: Build and deploy
on:
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - 'main'
env:
  DOCKER_HUB_APP_REPOSITORY: spomega
  EKS_CLUSTER_NAME: sage-uat
  AWS_REGION: eu-central-1
  EKS_NAMESPACE: neuro-space

jobs:
  build-and-upload-docker-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Copy .env
        run: cp .env.example .env

      - name: QEMU Setup
        uses: docker/setup-qemu-action@v2

      - name: Buildx Docker Setup
        uses: docker/setup-buildx-action@v2

      - name: DockerHub and Push Image
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build And Push Image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: spomega/neuronation:latest

  deploy-k8s-staging:
    runs-on: ubuntu-latest
    environment: staging
    needs:
      - build-and-upload-docker-image
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Update kube config
        run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION
      - name: Inject secrets
        uses: cschleiden/replace-tokens@v1
        with:
          files: '["k8s/*.yaml"]'
          tokenPrefix: __ # optional, default is #{
          tokenSuffix: __ # optional, default is }#
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USERNAME}}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD}}
      - name: Deploy to EKS
        uses: Azure/k8s-deploy@v1
        with:
          namespace: ${{ env.EKS_NAMESPACE }}
          manifests: |
            k8s/secret.yaml
            k8s/deployment.yaml
            k8s/service.yaml 
      - name: Update deployment status
        run: |
          echo "Deployment to EKS Successful"